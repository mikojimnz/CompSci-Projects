package ap.picturelab;

import javax.swing.*;
import java.util.ArrayList;

/**
 * This is the main entry point for the program. A swing user interface (JFrame) is shown,
 * allowing the user to load and display images, create and save collages, and blend images together.
 * 
 * @author Leon LaSpina, Bethpage High School.
 */
public class CollageGUI extends javax.swing.JFrame {
   ArrayList<Picture> loadedPics;
   
   /**
    * The last collage image created.
    */
   Picture collagePicture;
   
   /**
    * Creates new form CollageGUI
    */
   public CollageGUI() {
      loadedPics = new ArrayList<>();
      initComponents();
      setSize(700,300);
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      topPanel = new javax.swing.JPanel();
      imageListLabel = new javax.swing.JLabel();
      widthTextField = new javax.swing.JTextField();
      jLabel1 = new javax.swing.JLabel();
      heightTextField = new javax.swing.JTextField();
      aspectratioCheckBox = new javax.swing.JCheckBox();
      thumbnailPanel = new javax.swing.JPanel();
      pictureButton1 = new javax.swing.JToggleButton();
      pictureButton2 = new javax.swing.JToggleButton();
      pictureButton3 = new javax.swing.JToggleButton();
      menuBar = new javax.swing.JMenuBar();
      fileMenu = new javax.swing.JMenu();
      newMenuItem = new javax.swing.JMenuItem();
      openMenuItem = new javax.swing.JMenuItem();
      saveMenuItem = new javax.swing.JMenuItem();
      exitMenuItem = new javax.swing.JMenuItem();
      Create = new javax.swing.JMenu();
      createItem1 = new javax.swing.JMenuItem();
      createItem2 = new javax.swing.JMenuItem();
      createItem3 = new javax.swing.JMenuItem();
      createItem4 = new javax.swing.JMenuItem();
      createItem5 = new javax.swing.JMenuItem();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setTitle("Collage Creator");
      setMinimumSize(new java.awt.Dimension(400, 400));

      imageListLabel.setText("Scale Loaded images to:");
      topPanel.add(imageListLabel);

      widthTextField.setText(" 200 ");
      widthTextField.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            widthTextFieldActionPerformed(evt);
         }
      });
      topPanel.add(widthTextField);

      jLabel1.setText(" by ");
      topPanel.add(jLabel1);

      heightTextField.setText(" 200 ");
      topPanel.add(heightTextField);

      aspectratioCheckBox.setText("Maintain Aspect Ratio");
      topPanel.add(aspectratioCheckBox);

      getContentPane().add(topPanel, java.awt.BorderLayout.NORTH);

      pictureButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picturelab/noImage.png"))); // NOI18N
      thumbnailPanel.add(pictureButton1);

      pictureButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picturelab/noImage.png"))); // NOI18N
      pictureButton2.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            pictureButton2ActionPerformed(evt);
         }
      });
      thumbnailPanel.add(pictureButton2);

      pictureButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picturelab/noImage.png"))); // NOI18N
      thumbnailPanel.add(pictureButton3);

      getContentPane().add(thumbnailPanel, java.awt.BorderLayout.CENTER);

      fileMenu.setText("File");

      newMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
      newMenuItem.setText("New (Clear)");
      newMenuItem.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            newMenuItemActionPerformed(evt);
         }
      });
      fileMenu.add(newMenuItem);

      openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
      openMenuItem.setText("Open");
      openMenuItem.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            openMenuItemActionPerformed(evt);
         }
      });
      fileMenu.add(openMenuItem);

      saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
      saveMenuItem.setText("Save");
      saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            saveMenuItemActionPerformed(evt);
         }
      });
      fileMenu.add(saveMenuItem);

      exitMenuItem.setText("Exit");
      exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitMenuItemActionPerformed(evt);
         }
      });
      fileMenu.add(exitMenuItem);

      menuBar.add(fileMenu);

      Create.setText("Create");

      createItem1.setText("Single Image Color Tones");
      createItem1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            createItem1ActionPerformed(evt);
         }
      });
      Create.add(createItem1);

      createItem2.setText("Single Image Mirrors");
      createItem2.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            createItem2ActionPerformed(evt);
         }
      });
      Create.add(createItem2);

      createItem3.setText("Random");
      createItem3.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            createItem3ActionPerformed(evt);
         }
      });
      Create.add(createItem3);

      createItem4.setText("Two Image Checkerboard");
      createItem4.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            createItem4ActionPerformed(evt);
         }
      });
      Create.add(createItem4);

      createItem5.setText("Blended Image");
      createItem5.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            createItem5ActionPerformed(evt);
         }
      });
      Create.add(createItem5);

      menuBar.add(Create);

      setJMenuBar(menuBar);

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
      if(collagePicture==null) {
         JOptionPane.showMessageDialog(this, "Please create a collage before trying to save it.", "Collage Error", JOptionPane.ERROR_MESSAGE);
      }
      else {
         boolean itSaved = FileChooser.showSaveDialog(this, collagePicture);
         if(itSaved)
            JOptionPane.showMessageDialog(this, "File Saved.", "Collage Make", JOptionPane.INFORMATION_MESSAGE);
      }
   }//GEN-LAST:event_saveMenuItemActionPerformed

   private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
      Picture pic = FileChooser.showOpenDialog(this);
      if(pic!=null) {
         Picture thumbnail = PictureUtils.scaleTo(pic, 200,200);
         Icon iconic = new ImageIcon(thumbnail.getBufferedImage());

         if(this.aspectratioCheckBox.isSelected())
            pic = PictureUtils.scaleToKeepAspectratio(pic, inputWidthField());
         else
            pic = PictureUtils.scaleTo(pic, inputWidthField(), inputHeightField());
         
         if(loadedPics.size()>=3)
            loadedPics.remove(2);
         loadedPics.add(pic);
         JToggleButton button = null; //which button are we up to in adding images?
         if(loadedPics.size() == 1)
            button = pictureButton1;
         else if(loadedPics.size() == 2)
            button = pictureButton2;
         else  //if(loadedPics.size() == 3)
            button = pictureButton3;
         
         button.setIcon(iconic);
         button.setSelected(true);
         pic.explore();
      }
     
   }//GEN-LAST:event_openMenuItemActionPerformed

   private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
      System.exit(0);
   }//GEN-LAST:event_exitMenuItemActionPerformed

   private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed
      //this.topPanel.removeAll();
      //topPanel.add(imageListLabel);
      loadedPics.clear();
      
      Icon notapict =  new javax.swing.ImageIcon(getClass().getResource("/picturelab/noImage.png")); 
      pictureButton1.setIcon(notapict);
      pictureButton2.setIcon(notapict);
      pictureButton3.setIcon(notapict);
   }//GEN-LAST:event_newMenuItemActionPerformed

   
   /**
    * Creates a collage with different color tone filters applied to the selected image.
    * @param evt 
    */
   private void createItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createItem1ActionPerformed
      if(loadedPics.isEmpty()) {
         JOptionPane.showMessageDialog(this,"Please load a picture first.");
         return;  
      }
      Picture aPicture = get1SelectedPicture();
      collagePicture = CollageMaker.create3By3TintedCollage(aPicture);
      collagePicture.explore();
   }//GEN-LAST:event_createItem1ActionPerformed

   /**
    * Create a mirror images from a single image and build a 2 by 2 canvas from
    * the single selected picture.
    * @param evt 
    */
   private void createItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createItem2ActionPerformed
      if(loadedPics.isEmpty()) {
         JOptionPane.showMessageDialog(this,"Please load a picture first.");
         return;  
      }
      Picture picture = this.get1SelectedPicture();
      collagePicture = CollageMaker.create2By2Mirror(picture);
      collagePicture.explore();
   }//GEN-LAST:event_createItem2ActionPerformed

   /**
    * Do Something creative that involves some randomness.
    * Modify this comment to reflect what you are doing.
    * @param evt 
    */
   private void createItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createItem3ActionPerformed
      Picture[] photo = this.get2SelectedPictures();
      collagePicture = CollageMaker.createRandomCollage(photo[0], photo[1]);
      collagePicture.explore();
   }//GEN-LAST:event_createItem3ActionPerformed


/**
 * A pair of images is used to create a 4 by 4 collage. If the two images are A and B, then
 * the image created is AB
 *                      BA
 * @param evt 
 */
   private void createItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createItem4ActionPerformed
      Picture[] pictures = this.get2SelectedPictures();
      collagePicture = CollageMaker.create2By2Collage(pictures[0], pictures[1]);
      collagePicture.explore();
   }//GEN-LAST:event_createItem4ActionPerformed

   private void pictureButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pictureButton2ActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_pictureButton2ActionPerformed

   private void widthTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_widthTextFieldActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_widthTextFieldActionPerformed

   /**
    * Blended Menu Action: Creates a new image by merging (super-imposing) one image with another.
    * @param evt 
    */
   private void createItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createItem5ActionPerformed
      Picture[] images =  get2SelectedPictures();
      try {
         collagePicture = PictureUtils.blend(images[0], images[1]);
         collagePicture.explore();   
      }
      catch(IllegalArgumentException no) {
         JOptionPane.showMessageDialog(this, no.getMessage(),"Blending Error",JOptionPane.ERROR_MESSAGE);
      }
   }//GEN-LAST:event_createItem5ActionPerformed

   private int inputWidthField() {
      String fString = this.widthTextField.getText().trim();
      try {
         return Integer.parseInt(fString);
      }
      catch(NumberFormatException duh) {
         widthTextField.setText("300");
         return 300;
      }
   }
   
   private int inputHeightField() {
      String fString = heightTextField.getText().trim();
      try {
         return Integer.parseInt(fString);
      }
      catch(NumberFormatException sillyUser) {
         heightTextField.setText("300");
         return 300;
      }
   }
   
   /**
    * Used to determine which image the user has selected if more than one image is loaded.
    * @return The first Picture with a corresponding selected toggle button. If the toggle button
    * is selected, but there is no loaded picture, then a blank image is returned.
    */
   private Picture get1SelectedPicture() {
      if(loadedPics.isEmpty())
         return new Picture(100,100);
      if(pictureButton1.isSelected())
         return loadedPics.get(0);
      if(loadedPics.size()>=2 && pictureButton2.isSelected())
         return loadedPics.get(1);
      if(loadedPics.size()>=3 && pictureButton3.isSelected())
         return loadedPics.get(2);
      
      return new Picture(100,100);
   }
   
   private Picture[] get2SelectedPictures() {
      Picture[] twoPictures = new Picture[2];
      twoPictures[0] = get1SelectedPicture();
      if(loadedPics.size() < 2) {
         twoPictures[1] = new Picture(100,100);
         JOptionPane.showMessageDialog(this, "Please select two images.", "Collage Maker Mixup",JOptionPane.ERROR_MESSAGE);
      }
      else if(loadedPics.size() >= 3 && pictureButton3.isSelected())
         twoPictures[1] = loadedPics.get(2);
      else if(loadedPics.size() >= 2 && pictureButton2.isSelected()) 
         twoPictures[1] = loadedPics.get(1);
      else
         twoPictures[1] = new Picture(100,100);
      
      return twoPictures;
   }
   
   
   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(CollageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(CollageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(CollageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(CollageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
        //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new CollageGUI().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JMenu Create;
   private javax.swing.JCheckBox aspectratioCheckBox;
   private javax.swing.JMenuItem createItem1;
   private javax.swing.JMenuItem createItem2;
   private javax.swing.JMenuItem createItem3;
   private javax.swing.JMenuItem createItem4;
   private javax.swing.JMenuItem createItem5;
   private javax.swing.JMenuItem exitMenuItem;
   private javax.swing.JMenu fileMenu;
   private javax.swing.JTextField heightTextField;
   private javax.swing.JLabel imageListLabel;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JMenuBar menuBar;
   private javax.swing.JMenuItem newMenuItem;
   private javax.swing.JMenuItem openMenuItem;
   private javax.swing.JToggleButton pictureButton1;
   private javax.swing.JToggleButton pictureButton2;
   private javax.swing.JToggleButton pictureButton3;
   private javax.swing.JMenuItem saveMenuItem;
   private javax.swing.JPanel thumbnailPanel;
   private javax.swing.JPanel topPanel;
   private javax.swing.JTextField widthTextField;
   // End of variables declaration//GEN-END:variables
}
